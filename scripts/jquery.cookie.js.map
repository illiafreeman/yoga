{"version":3,"sources":["../node_modules/jquery.cookie/jquery.cookie.js"],"names":["factory","define","amd","exports","require","jQuery","$","pluses","encode","s","config","raw","encodeURIComponent","read","converter","value","indexOf","slice","replace","decodeURIComponent","json","JSON","parse","e","parseCookieValue","isFunction","cookie","key","options","t","undefined","extend","defaults","expires","days","Date","setTime","document","stringify","String","toUTCString","path","domain","secure","join","result","cookies","split","i","l","length","parts","name","shift","removeCookie"],"mappings":"CAOA,SAAAA,GACA,mBAAAC,QAAAA,OAAAC,IAEAD,OAAA,CAAA,UAAAD,GACA,iBAAAG,QAEAH,EAAAI,QAAA,WAGAJ,EAAAK,QATA,CAWA,SAAAC,GAEA,IAAAC,EAAA,MAEA,SAAAC,EAAAC,GACA,OAAAC,EAAAC,IAAAF,EAAAG,mBAAAH,GA0BA,SAAAI,EAAAJ,EAAAK,GACAC,EAAAL,EAAAC,IAAAF,EAhBA,SAAAA,GACA,IAAAA,EAAAO,QAAA,OAEAP,EAAAA,EAAAQ,MAAA,GAAA,GAAAC,QAAA,OAAA,KAAAA,QAAA,QAAA,OAGA,IAKA,OADAT,EAAAU,mBAAAV,EAAAS,QAAAX,EAAA,MACAG,EAAAU,KAAAC,KAAAC,MAAAb,GAAAA,EACA,MAAAc,KAIAC,CAAAf,GACA,OAAAH,EAAAmB,WAAAX,GAAAA,EAAAC,GAAAA,EAGA,IAAAL,EAAAJ,EAAAoB,OAAA,SAAAC,EAAAZ,EAAAa,GAOA,IACAC,EAhCAd,EA4BA,QAAAe,IAAAf,IAAAT,EAAAmB,WAAAV,GAQA,MALA,iBAFAa,EAAAtB,EAAAyB,OAAA,GAAArB,EAAAsB,SAAAJ,IAEAK,UACAC,EAAAN,EAAAK,SAAAJ,EAAAD,EAAAK,QAAA,IAAAE,MACAC,SAAAP,EAAA,MAAAK,IAGAG,SAAAX,OAAA,CACAlB,EAAAmB,GAAA,KArCAZ,EAqCAA,EApCAP,EAAAE,EAAAU,KAAAC,KAAAiB,UAAAvB,GAAAwB,OAAAxB,KAqCAa,EAAAK,QAAA,aAAAL,EAAAK,QAAAO,cAAA,GACAZ,EAAAa,KAAA,UAAAb,EAAAa,KAAA,GACAb,EAAAc,OAAA,YAAAd,EAAAc,OAAA,GACAd,EAAAe,OAAA,WAAA,IACAC,KAAA,IAYA,IAPA,IAAAC,EAAAlB,OAAAG,EAAA,GAKAgB,EAAAT,SAAAX,OAAAW,SAAAX,OAAAqB,MAAA,MAAA,GAEAC,EAAA,EAAAC,EAAAH,EAAAI,OAAAF,EAAAC,EAAAD,IAAA,CACA,IAAAG,EAAAL,EAAAE,GAAAD,MAAA,KACAK,GA5DA3C,EA4DA0C,EAAAE,QA3DA3C,EAAAC,IAAAF,EAAAU,mBAAAV,IA4DAiB,EAAAyB,EAAAP,KAAA,KAEA,GAAAjB,GAAAA,IAAAyB,EAAA,CAEAP,EAAAhC,EAAAa,EAAAX,GACA,MAIAY,QAAAG,KAAAJ,EAAAb,EAAAa,MACAmB,EAAAO,GAAA1B,GAIA,OAAAmB,GAGAnC,EAAAsB,SAAA,GAEA1B,EAAAgD,aAAA,SAAA3B,EAAAC,GACA,YAAAE,IAAAxB,EAAAoB,OAAAC,KAKArB,EAAAoB,OAAAC,EAAA,GAAArB,EAAAyB,OAAA,GAAAH,EAAA,CAAAK,SAAA,MACA3B,EAAAoB,OAAAC","file":"jquery.cookie.js","sourcesContent":["/*!\n * jQuery Cookie Plugin v1.4.1\n * https://github.com/carhartl/jquery-cookie\n *\n * Copyright 2013 Klaus Hartl\n * Released under the MIT license\n */\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD\n\t\tdefine(['jquery'], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// CommonJS\n\t\tfactory(require('jquery'));\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n}(function ($) {\n\n\tvar pluses = /\\+/g;\n\n\tfunction encode(s) {\n\t\treturn config.raw ? s : encodeURIComponent(s);\n\t}\n\n\tfunction decode(s) {\n\t\treturn config.raw ? s : decodeURIComponent(s);\n\t}\n\n\tfunction stringifyCookieValue(value) {\n\t\treturn encode(config.json ? JSON.stringify(value) : String(value));\n\t}\n\n\tfunction parseCookieValue(s) {\n\t\tif (s.indexOf('\"') === 0) {\n\t\t\t// This is a quoted cookie as according to RFC2068, unescape...\n\t\t\ts = s.slice(1, -1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\n\t\t}\n\n\t\ttry {\n\t\t\t// Replace server-side written pluses with spaces.\n\t\t\t// If we can't decode the cookie, ignore it, it's unusable.\n\t\t\t// If we can't parse the cookie, ignore it, it's unusable.\n\t\t\ts = decodeURIComponent(s.replace(pluses, ' '));\n\t\t\treturn config.json ? JSON.parse(s) : s;\n\t\t} catch(e) {}\n\t}\n\n\tfunction read(s, converter) {\n\t\tvar value = config.raw ? s : parseCookieValue(s);\n\t\treturn $.isFunction(converter) ? converter(value) : value;\n\t}\n\n\tvar config = $.cookie = function (key, value, options) {\n\n\t\t// Write\n\n\t\tif (value !== undefined && !$.isFunction(value)) {\n\t\t\toptions = $.extend({}, config.defaults, options);\n\n\t\t\tif (typeof options.expires === 'number') {\n\t\t\t\tvar days = options.expires, t = options.expires = new Date();\n\t\t\t\tt.setTime(+t + days * 864e+5);\n\t\t\t}\n\n\t\t\treturn (document.cookie = [\n\t\t\t\tencode(key), '=', stringifyCookieValue(value),\n\t\t\t\toptions.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\n\t\t\t\toptions.path    ? '; path=' + options.path : '',\n\t\t\t\toptions.domain  ? '; domain=' + options.domain : '',\n\t\t\t\toptions.secure  ? '; secure' : ''\n\t\t\t].join(''));\n\t\t}\n\n\t\t// Read\n\n\t\tvar result = key ? undefined : {};\n\n\t\t// To prevent the for loop in the first place assign an empty array\n\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t// calling $.cookie().\n\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\n\t\tfor (var i = 0, l = cookies.length; i < l; i++) {\n\t\t\tvar parts = cookies[i].split('=');\n\t\t\tvar name = decode(parts.shift());\n\t\t\tvar cookie = parts.join('=');\n\n\t\t\tif (key && key === name) {\n\t\t\t\t// If second argument (value) is a function it's a converter...\n\t\t\t\tresult = read(cookie, value);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Prevent storing a cookie that we couldn't decode.\n\t\t\tif (!key && (cookie = read(cookie)) !== undefined) {\n\t\t\t\tresult[name] = cookie;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tconfig.defaults = {};\n\n\t$.removeCookie = function (key, options) {\n\t\tif ($.cookie(key) === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Must not alter options, thus extending a fresh object...\n\t\t$.cookie(key, '', $.extend({}, options, { expires: -1 }));\n\t\treturn !$.cookie(key);\n\t};\n\n}));\n"],"sourceRoot":"assets/scripts/"}