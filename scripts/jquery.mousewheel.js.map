{"version":3,"sources":["../node_modules/jscrollpane/script/jquery.mousewheel.js"],"names":["factory","define","amd","exports","module","jQuery","$","nullLowestDeltaTimeout","lowestDelta","toFix","toBind","window","document","documentMode","slice","Array","prototype","event","fixHooks","i","length","mouseHooks","special","mousewheel","version","setup","this","addEventListener","handler","onmousewheel","data","getLineHeight","getPageHeight","teardown","removeEventListener","removeData","elem","$elem","$parent","fn","parseInt","css","height","settings","adjustOldDeltas","normalizeOffset","pageHeight","orgEvent","args","call","arguments","delta","deltaX","deltaY","absDelta","fix","type","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaMode","lineHeight","Math","max","abs","shouldAdjustOldDeltas","getBoundingClientRect","boundingRect","offsetX","clientX","left","offsetY","clientY","top","deltaFactor","unshift","clearTimeout","setTimeout","nullLowestDelta","dispatch","handle","apply","extend","on","trigger","unmousewheel","off"],"mappings":"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","file":"jquery.mousewheel.js","sourcesContent":["/*!\n * jQuery Mousewheel 3.1.13\n * Copyright OpenJS Foundation and other contributors\n */\n\n( function( factory ) {\n    if ( typeof define === \"function\" && define.amd ) {\n\n        // AMD. Register as an anonymous module.\n        define( [ \"jquery\" ], factory );\n    } else if ( typeof exports === \"object\" ) {\n\n        // Node/CommonJS style for Browserify\n        module.exports = factory;\n    } else {\n\n        // Browser globals\n        factory( jQuery );\n    }\n} )( function( $ ) {\n\n    var toFix  = [ \"wheel\", \"mousewheel\", \"DOMMouseScroll\", \"MozMousePixelScroll\" ],\n        toBind = ( \"onwheel\" in window.document || window.document.documentMode >= 9 ) ?\n                    [ \"wheel\" ] : [ \"mousewheel\", \"DomMouseScroll\", \"MozMousePixelScroll\" ],\n        slice  = Array.prototype.slice,\n        nullLowestDeltaTimeout, lowestDelta;\n\n    if ( $.event.fixHooks ) {\n        for ( var i = toFix.length; i; ) {\n            $.event.fixHooks[ toFix[ --i ] ] = $.event.mouseHooks;\n        }\n    }\n\n    var special = $.event.special.mousewheel = {\n        version: \"3.1.12\",\n\n        setup: function() {\n            if ( this.addEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.addEventListener( toBind[ --i ], handler, false );\n                }\n            } else {\n                this.onmousewheel = handler;\n            }\n\n            // Store the line height and page height for this particular element\n            $.data( this, \"mousewheel-line-height\", special.getLineHeight( this ) );\n            $.data( this, \"mousewheel-page-height\", special.getPageHeight( this ) );\n        },\n\n        teardown: function() {\n            if ( this.removeEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.removeEventListener( toBind[ --i ], handler, false );\n                }\n            } else {\n                this.onmousewheel = null;\n            }\n\n            // Clean up the data we added to the element\n            $.removeData( this, \"mousewheel-line-height\" );\n            $.removeData( this, \"mousewheel-page-height\" );\n        },\n\n        getLineHeight: function( elem ) {\n            var $elem = $( elem ),\n                $parent = $elem[ \"offsetParent\" in $.fn ? \"offsetParent\" : \"parent\" ]();\n            if ( !$parent.length ) {\n                $parent = $( \"body\" );\n            }\n            return parseInt( $parent.css( \"fontSize\" ), 10 ) ||\n                parseInt( $elem.css( \"fontSize\" ), 10 ) || 16;\n        },\n\n        getPageHeight: function( elem ) {\n            return $( elem ).height();\n        },\n\n        settings: {\n            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below\n            normalizeOffset: true  // calls getBoundingClientRect for each event\n        }\n    };\n\n    $.fn.extend( {\n        mousewheel: function( fn ) {\n            return fn ? this.on( \"mousewheel\", fn ) : this.trigger( \"mousewheel\" );\n        },\n\n        unmousewheel: function( fn ) {\n            return this.off( \"mousewheel\", fn );\n        }\n    } );\n\n\n    function handler( event ) {\n        var orgEvent   = event || window.event,\n            args       = slice.call( arguments, 1 ),\n            delta      = 0,\n            deltaX     = 0,\n            deltaY     = 0,\n            absDelta   = 0;\n        event = $.event.fix( orgEvent );\n        event.type = \"mousewheel\";\n\n        // Old school scrollwheel delta\n        if ( \"detail\" in orgEvent ) {\n            deltaY = orgEvent.detail * -1;\n        }\n        if ( \"wheelDelta\" in orgEvent ) {\n            deltaY = orgEvent.wheelDelta;\n        }\n        if ( \"wheelDeltaY\" in orgEvent ) {\n            deltaY = orgEvent.wheelDeltaY;\n        }\n        if ( \"wheelDeltaX\" in orgEvent ) {\n            deltaX = orgEvent.wheelDeltaX * -1;\n        }\n\n        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event\n        if ( \"axis\" in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n            deltaX = deltaY * -1;\n            deltaY = 0;\n        }\n\n        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy\n        delta = deltaY === 0 ? deltaX : deltaY;\n\n        // New school wheel delta (wheel event)\n        if ( \"deltaY\" in orgEvent ) {\n            deltaY = orgEvent.deltaY * -1;\n            delta  = deltaY;\n        }\n        if ( \"deltaX\" in orgEvent ) {\n            deltaX = orgEvent.deltaX;\n            if ( deltaY === 0 ) {\n                delta  = deltaX * -1;\n            }\n        }\n\n        // No change actually happened, no reason to go any further\n        if ( deltaY === 0 && deltaX === 0 ) {\n            return;\n        }\n\n        // Need to convert lines and pages to pixels if we aren't already in pixels\n        // There are three delta modes:\n        //   * deltaMode 0 is by pixels, nothing to do\n        //   * deltaMode 1 is by lines\n        //   * deltaMode 2 is by pages\n        if ( orgEvent.deltaMode === 1 ) {\n            var lineHeight = $.data( this, \"mousewheel-line-height\" );\n            delta  *= lineHeight;\n            deltaY *= lineHeight;\n            deltaX *= lineHeight;\n        } else if ( orgEvent.deltaMode === 2 ) {\n            var pageHeight = $.data( this, \"mousewheel-page-height\" );\n            delta  *= pageHeight;\n            deltaY *= pageHeight;\n            deltaX *= pageHeight;\n        }\n\n        // Store lowest absolute delta to normalize the delta values\n        absDelta = Math.max( Math.abs( deltaY ), Math.abs( deltaX ) );\n\n        if ( !lowestDelta || absDelta < lowestDelta ) {\n            lowestDelta = absDelta;\n\n            // Adjust older deltas if necessary\n            if ( shouldAdjustOldDeltas( orgEvent, absDelta ) ) {\n                lowestDelta /= 40;\n            }\n        }\n\n        // Adjust older deltas if necessary\n        if ( shouldAdjustOldDeltas( orgEvent, absDelta ) ) {\n\n            // Divide all the things by 40!\n            delta  /= 40;\n            deltaX /= 40;\n            deltaY /= 40;\n        }\n\n        // Get a whole, normalized value for the deltas\n        delta  = Math[ delta  >= 1 ? \"floor\" : \"ceil\" ]( delta  / lowestDelta );\n        deltaX = Math[ deltaX >= 1 ? \"floor\" : \"ceil\" ]( deltaX / lowestDelta );\n        deltaY = Math[ deltaY >= 1 ? \"floor\" : \"ceil\" ]( deltaY / lowestDelta );\n\n        // Normalise offsetX and offsetY properties\n        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {\n            var boundingRect = this.getBoundingClientRect();\n            event.offsetX = event.clientX - boundingRect.left;\n            event.offsetY = event.clientY - boundingRect.top;\n        }\n\n        // Add information to the event object\n        event.deltaX = deltaX;\n        event.deltaY = deltaY;\n        event.deltaFactor = lowestDelta;\n\n        // Go ahead and set deltaMode to 0 since we converted to pixels\n        // Although this is a little odd since we overwrite the deltaX/Y\n        // properties with normalized deltas.\n        event.deltaMode = 0;\n\n        // Add event and delta to the front of the arguments\n        args.unshift( event, delta, deltaX, deltaY );\n\n        // Clearout lowestDelta after sometime to better\n        // handle multiple device types that give different\n        // a different lowestDelta\n        // Ex: trackpad = 3 and mouse wheel = 120\n        if ( nullLowestDeltaTimeout ) {\n            window.clearTimeout( nullLowestDeltaTimeout );\n        }\n        nullLowestDeltaTimeout = window.setTimeout( nullLowestDelta, 200 );\n\n        return ( $.event.dispatch || $.event.handle ).apply( this, args );\n    }\n\n    function nullLowestDelta() {\n        lowestDelta = null;\n    }\n\n    function shouldAdjustOldDeltas( orgEvent, absDelta ) {\n\n        // If this is an older event and the delta is divisable by 120,\n        // then we are assuming that the browser is treating this as an\n        // older mouse wheel event and that we should divide the deltas\n        // by 40 to try and get a more usable deltaFactor.\n        // Side note, this actually impacts the reported scroll distance\n        // in older browsers and can cause scrolling to be slower than native.\n        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.\n        return special.settings.adjustOldDeltas && orgEvent.type === \"mousewheel\" &&\n            absDelta % 120 === 0;\n    }\n\n} );\n"],"sourceRoot":"assets/scripts/"}